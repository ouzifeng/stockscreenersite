# Generated by Django 4.2 on 2023-06-26 13:51

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="CoFinExport",
            fields=[
                ("ID", models.AutoField(primary_key=True, serialize=False)),
                ("FinPerTypeID", models.IntegerField()),
                ("RepCurry", models.CharField(max_length=255)),
                ("RefCurry", models.CharField(max_length=255)),
                ("RepDate", models.DateField()),
                ("Multiplier", models.CharField(max_length=255)),
                ("RepValue", models.FloatField()),
                ("RefValue", models.FloatField()),
                ("DataSource", models.CharField(max_length=255)),
                ("Reliability", models.IntegerField()),
                ("comment", models.TextField()),
                ("PeriodEnd", models.DateField(db_index=True)),
            ],
            options={
                "db_table": "cofinexport",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Country",
            fields=[
                ("ID", models.AutoField(primary_key=True, serialize=False)),
                ("ShortName", models.CharField(max_length=200)),
                ("Currency", models.CharField(max_length=50)),
                ("LongName", models.CharField(max_length=200)),
                ("WHTRate", models.FloatField()),
                ("OrdSeqNo", models.IntegerField()),
                ("Alias1", models.CharField(blank=True, max_length=200, null=True)),
                ("Alias2", models.CharField(blank=True, max_length=200, null=True)),
                ("Adjective1", models.CharField(blank=True, max_length=200, null=True)),
                ("Adjective2", models.CharField(blank=True, max_length=200, null=True)),
                ("Adjective3", models.CharField(blank=True, max_length=200, null=True)),
            ],
            options={
                "db_table": "country",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="FinData",
            fields=[
                ("ID", models.AutoField(primary_key=True, serialize=False)),
                ("OrdSeqNo", models.IntegerField()),
                ("FinDataName", models.CharField(max_length=255)),
                ("FinDataType", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "findata",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="Stock",
            fields=[
                (
                    "ID",
                    models.AutoField(db_column="ID", primary_key=True, serialize=False),
                ),
                ("CountryID", models.IntegerField(db_column="CountryID")),
                (
                    "ReportType",
                    models.CharField(db_column="ReportType", max_length=200),
                ),
                ("FinYearEnd", models.DateField(db_column="FinYearEnd")),
                (
                    "CompanyName",
                    models.CharField(db_column="CompanyName", max_length=200),
                ),
                (
                    "DisplayName",
                    models.CharField(db_column="DisplayName", max_length=200),
                ),
                ("SEDOL", models.CharField(db_column="SEDOL", max_length=200)),
                ("ISIN", models.CharField(db_column="ISIN", max_length=200)),
                ("FTTicker", models.CharField(db_column="FTTicker", max_length=200)),
                ("YFTicker", models.CharField(db_column="YFTicker", max_length=200)),
                ("GFTicker", models.CharField(db_column="GFTicker", max_length=200)),
                ("BBTicker", models.CharField(db_column="BBTicker", max_length=200)),
                ("BCTicker", models.CharField(db_column="BCTicker", max_length=200)),
                ("StockDescription", models.TextField(db_column="StockDescription")),
                ("SPCurry", models.CharField(db_column="SPCurry", max_length=200)),
                ("RefCurry", models.CharField(db_column="RefCurry", max_length=200)),
                (
                    "HighValue12mth",
                    models.DecimalField(
                        db_column="12mthHighValue", decimal_places=4, max_digits=19
                    ),
                ),
                (
                    "LowValue12mth",
                    models.DecimalField(
                        db_column="12mthLowValue", decimal_places=4, max_digits=19
                    ),
                ),
                ("CurrentSharesOS", models.IntegerField(db_column="CurrentSharesOS")),
                (
                    "CurrentValue",
                    models.DecimalField(
                        db_column="CurrentValue", decimal_places=4, max_digits=19
                    ),
                ),
                ("CurrentDate", models.DateField(db_column="CurrentDate")),
                (
                    "MktCap",
                    models.DecimalField(
                        db_column="MktCap", decimal_places=4, max_digits=19
                    ),
                ),
                ("StockType", models.CharField(db_column="StockType", max_length=200)),
                ("IndexID", models.IntegerField(db_column="IndexID")),
                ("ISIN2", models.CharField(db_column="ISIN2", max_length=200)),
                ("StockURL", models.URLField(db_column="StockURL")),
                ("slug", models.SlugField(blank=True, max_length=500)),
            ],
            options={
                "db_table": "stock",
                "managed": False,
            },
        ),
        migrations.CreateModel(
            name="CAGR",
            fields=[
                (
                    "StockID",
                    models.OneToOneField(
                        db_column="StockID",
                        on_delete=django.db.models.deletion.CASCADE,
                        primary_key=True,
                        serialize=False,
                        to="myapp.stock",
                    ),
                ),
                ("Revenue_CAGR", models.FloatField(db_column="Revenue_CAGR")),
                ("Op_Inc_CAGR", models.FloatField(db_column="Op_Inc_CAGR")),
                (
                    "Net_Inc_exc_ext_CAGR",
                    models.FloatField(db_column="Net_Inc_exc_ext_CAGR"),
                ),
                ("EPS_CAGR", models.FloatField(db_column="EPS_CAGR")),
                ("Dividend_CAGR", models.FloatField(db_column="Dividend_CAGR")),
                ("CashOps_CAGR", models.FloatField(db_column="CashOps_CAGR")),
                ("Capex_CAGR", models.FloatField(db_column="Capex_CAGR")),
                ("Equity_CAGR", models.FloatField(db_column="Equity_CAGR")),
                ("buyback_ratio", models.FloatField(db_column="buyback_ratio")),
                (
                    "goodwill_total_equity",
                    models.FloatField(db_column="goodwill_total_equity"),
                ),
                ("RoburM", models.FloatField(db_column="RoburM")),
                ("Enterprise_ratio", models.FloatField(db_column="Enterprise_ratio")),
                ("EqPS_Price", models.FloatField(db_column="EqPS_Price")),
                ("Price_HiLo", models.FloatField(db_column="Price_HiLo")),
                ("P_E", models.FloatField(db_column="P_E")),
                ("Yield_Percent", models.FloatField(db_column="Yield_Percent")),
                ("PEG_Ratio", models.FloatField(db_column="PEG_Ratio")),
            ],
            options={
                "db_table": "cagr",
            },
        ),
    ]
